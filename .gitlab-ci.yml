---
stages:
  - build
  - test
  - review

before_script:
  - export TAG=${CI_COMMIT_SHA}
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - export REGISTRY_HOST=${CI_REGISTRY}
  - export REGISTRY_URI="/${CI_PROJECT_PATH}"

hyku.build:
  stage: build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
    refs:
      - merge_requests
  tags:
    - local

lint:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  allow_failure: true
  script:
    - bundle check || bundle
    - bundle exec rubocop
  only:
    refs:
      - merge_requests
  tags:
    - docker

test:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  allow_failure: true
  variables:
    ALLOW_ANONYMOUS_LOGIN: "yes"
    CONFDIR: "/app/samvera/hyrax-webapp/solr/config"
    DATABASE_ADAPTER: postgresql
    DATABASE_NAME: hyku
    DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: "true"
    DATABASE_HOST: db
    DATABASE_URL: postgres://postgres:postgres@db/hyku
    DATABASE_USER: postgres
    POSTGRESQL_DATABASE: hyku
    POSTGRESQL_PASSWORD: postgres
    DB_PORT: 5432
    DB_HOST: db
    FCREPO_PORT: 8080
    FCREPO_HOST: fcrepo
    FEDORA_URL: http://fcrepo:8080/fcrepo/rest
    REDIS_HOST: redis
    SETTINGS__SOLR_URL: http://admin:admin@solr:8983/solr/hyku-test
    SOLR_ADMIN_USER: admin
    SOLR_ADMIN_USERNAME: admin
    SOLR_ADMIN_PASSWORD: admin
    SOLR_CONFIGSET_NAME: hyku
    SOLR_COLLECTION_NAME: hyku-test
    SOLR_CLOUD_BOOTSTRAP: "yes"
    SOLR_ENABLE_CLOUD_MODE: "yes"
    SOLR_ENABLE_AUTHENTICATION: "yes"
    SOLR_PORT: 8983
    SOLR_HOST: solr
    SOLR_URL: http://admin:admin@solr:8983/solr/hyku-test
    SOLR_ZK_HOSTS: zk:2181
    ZOO_HEAP_SIZE: 128
    ZOO_PORT_NUMBER: 2181
  services:
    - name: bitnami/postgresql:12.6.0
      alias: db
    - name: samvera/fcrepo4:4.7.5
      alias: fcrepo
    - name: redis:5-alpine
      alias: redis
    - name: bitnami/zookeeper:3
      alias: zk
    - name: bitnami/solr:8
      alias: solr
    - name: selenium/standalone-chrome:3.141
      alias: chrome
  before_script:
    - >-
      solrcloud-upload-configset.sh /app/samvera/hyrax-webapp/solr/config;
      solrcloud-assign-configset.sh;
  script:
    - bundle exec rspec
  only:
    refs:
      - merge_requests
  tags:
    - kubernetes

hyku.review:
  stage: review
  needs: ["hyku.build"]
  extends:
    - .deploy
  environment:
    name: hyku.review/$CI_MERGE_REQUEST_ID
    url: http://hyku-$CI_MERGE_REQUEST_ID.$KUBE_INGRESS_BASE_DOMAIN
    on_stop: hyku.review.stop
    auto_stop_in: 1 day
  only:
    refs:
      - merge_requests
  variables:
    DEPLOY_IMAGE: $CI_REGISTRY_IMAGE
    DEPLOY_TAG: $CI_COMMIT_SHA
    HELM_EXPERIMENTAL_OCI: 1
    HELM_RELEASE_NAME: hyku-$CI_MERGE_REQUEST_ID
    KUBE_NAMESPACE: hyku-review
    HELM_EXTRA_ARGS: >
      --values ops/review-deploys.yaml
      --set image.repository="$DEPLOY_IMAGE"
      --set image.tag="$DEPLOY_TAG"
      --set worker.image.repository="$DEPLOY_IMAGE"
      --set worker.image.tag="$DEPLOY_TAG"
      --set ingress.enabled=true
      --set ingress.hosts[0].host=hyku-$CI_MERGE_REQUEST_ID.$KUBE_INGRESS_BASE_DOMAIN
      --set ingress.hosts[0].paths[0].path="/"
  script:
    - helm registry login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - helm chart pull ghcr.io/samvera/hyrax/hyrax-helm:0.18.0
    - helm chart export ghcr.io/samvera/hyrax/hyrax-helm:0.18.0
    - deploy hyrax
  allow_failure: true
  tags:
    - kubernetes

hyku.review.stop:
  stage: review
  extends:
    - .deploy
  environment:
    name: hyku.review/$CI_MERGE_REQUEST_ID
    url: http://hyku-$CI_MERGE_REQUEST_ID.$KUBE_INGRESS_BASE_DOMAIN
    action: stop
  when: manual
  allow_failure: true
  variables:
    HELM_RELEASE_NAME: hyku-$CI_MERGE_REQUEST_ID
    KUBE_NAMESPACE: hyku-review
    GIT_STRATEGY: none
  script:
    - delete
  tags:
    - kubernetes

.deploy_helpers: &deploy_helpers |
  function deploy() {
    helm repo update

    chart="${1}"

    helm upgrade \
        --kubeconfig $KUBECONFIG_BL \
        --install \
        --atomic \
        --timeout 15m0s \
        $HELM_EXTRA_ARGS \
        --namespace="$KUBE_NAMESPACE" \
        --create-namespace \
        "$HELM_RELEASE_NAME" \
        "${chart}"
  }

  function delete() {
    echo "Deleting release: $HELM_RELEASE_NAME..."
    helm delete --namespace "$KUBE_NAMESPACE" "$HELM_RELEASE_NAME"
  }

.deploy:
  image: dtzar/helm-kubectl:3.5.3
  before_script:
    - *deploy_helpers
