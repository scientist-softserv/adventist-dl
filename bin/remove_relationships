#!/usr/bin/env ruby
# Run using: bundle exec rails r bin/remove_relationships <importer id>

require 'ruby-progressbar'

def remove_relationships(importer_id)
  importer = Bulkrax::Importer.find(importer_id)
  succeeded_entries = importer.entries.select { |e| e.status == 'Complete' }
  progressbar = ProgressBar.create(total: succeeded_entries.count)

  remove_relationships_from_succeeded_entries(succeeded_entries, progressbar)
end

def remove_relationships_from_succeeded_entries(succeeded_entries, progressbar)
  succeeded_entries.each do |entry|
    progressbar.increment
    obj = entry.factory.find
    next if obj.is_a?(FileSet) # FileSets must be attached to a Work

    if obj.is_a?(Collection)
      remove_relationships_from_collection(obj)
    else
      remove_relationships_from_work(obj)
    end

    obj.try(:reindex_extent=, Hyrax::Adapters::NestingIndexAdapter::LIMITED_REINDEX)
    obj.save!
  end
end

def remove_relationships_from_collection(collection)
  # Remove child work relationships
  collection.member_works.each do |work|
    change = work.member_of_collections.delete(collection)
    work.save! if change.present?
  end

  # Remove parent collection relationships
  collection.member_of_collections.each do |parent_col|
    Hyrax::Collections::NestedCollectionPersistenceService
      .remove_nested_relationship_for(parent: parent_col, child: collection)
  end

  # Remove child collection relationships
  collection.member_collections.each do |child_col|
    Hyrax::Collections::NestedCollectionPersistenceService
      .remove_nested_relationship_for(parent: collection, child: child_col)
  end
end

def remove_relationships_from_work(work)
  # Remove parent collection relationships
  work.member_of_collections = []

  # Remove parent work relationships
  work.member_of_works.each do |parent_work|
    parent_work.members.delete(work)
    parent_work.save!
  end

  # Remove child work relationships
  work.member_works.each do |child_work|
    work.member_works.delete(child_work)
  end
end

if ARGV.length.zero?
  puts 'Please pass an Importer ID'
else
  remove_relationships(ARGV.first.strip)
end